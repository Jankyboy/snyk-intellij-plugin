package io.snyk.plugin.ui.toolwindow.nodes.leaf

import com.intellij.openapi.project.Project
import io.snyk.plugin.analytics.getIssueSeverityOrNull
import io.snyk.plugin.analytics.getIssueType
import io.snyk.plugin.getSnykAnalyticsService
import io.snyk.plugin.ui.toolwindow.nodes.DescriptionHolderTreeNode
import io.snyk.plugin.ui.toolwindow.nodes.NavigatableToSourceTreeNode
import io.snyk.plugin.ui.toolwindow.panels.VulnerabilityDescriptionPanel
import snyk.analytics.IssueInTreeIsClicked
import snyk.oss.Vulnerability
import javax.swing.tree.DefaultMutableTreeNode

class VulnerabilityTreeNode(
    private val groupedVulns: Collection<Vulnerability>,
    val project: Project,
    override val navigateToSource: () -> Unit
) : DefaultMutableTreeNode(groupedVulns), NavigatableToSourceTreeNode, DescriptionHolderTreeNode {

    override fun getDescriptionPanel(logEventNeeded : Boolean): VulnerabilityDescriptionPanel {
        val issue = groupedVulns.first()
        if (logEventNeeded) getSnykAnalyticsService().logIssueInTreeIsClicked(
            IssueInTreeIsClicked.builder()
                .ide(IssueInTreeIsClicked.Ide.JETBRAINS)
                .issueType(issue.getIssueType())
                .issueId(issue.id)
                .severity(issue.getIssueSeverityOrNull())
                .build()
        )
        return VulnerabilityDescriptionPanel(groupedVulns)
    }
}
